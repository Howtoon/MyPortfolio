from __future__ import division, print_function
from visual import *
from visual.graph import *

scene.width = 1000

G=-6.7e-11
planetMass = 1.5e4
spaceShipMass = 6e24

planet = sphere(radius=6.4e6, pos=vector(0,-2e7,0), color=color.green)


spaceShip1 = sphere(radius=3e6, pos=vector(-13e7,4.5e7), color=color.red)
r = vector(spaceShip1.pos.x-planet.pos.x,spaceShip1.pos.y-planet.pos.y,0)
rMag = sqrt(r.x*r.x+r.y*r.y)
gravForceSpaceShip1 = (G*((planetMass*spaceShipMass)/(rMag*rMag)))
scaleFactor= (gravForceSpaceShip1/rMag)*100000
gravForce1 = arrow(pos=spaceShip1.pos , axis = (scaleFactor)*r , color = color.yellow)

spaceShip2= sphere(radius = 3e6, pos = vector(-6.5e7,4.5e7,0), color = color.orange)
r = vector(spaceShip2.pos.x-planet.pos.x,spaceShip2.pos.y-planet.pos.y,0)
rMag = sqrt(r.x*r.x+r.y*r.y)
gravForceSpaceShip2 = (G*((planetMass*spaceShipMass)/(rMag*rMag)))
gravForce2 = arrow(pos=spaceShip2.pos , axis = scaleFactor*r , color = color.yellow)

spaceShip3= sphere(radius = 3e6, pos = vector(0,4.5e7,0), color = color.blue)
r = vector(spaceShip3.pos.x-planet.pos.x,spaceShip3.pos.y-planet.pos.y,0)
rMag = sqrt(r.x*r.x+r.y*r.y)
gravForceSpaceShip3 = (G*((planetMass*spaceShipMass)/(rMag*rMag)))
gravForce3 = arrow(pos=spaceShip3.pos , axis = scaleFactor*r , color = color.yellow)


spaceShip4= sphere(radius = 3e6, pos = vector(6.5e7,4.5e7,0), color = color.cyan)
r = vector(spaceShip4.pos.x-planet.pos.x,spaceShip4.pos.y-planet.pos.y,0)
rMag = sqrt(r.x*r.x+r.y*r.y)
gravForceSpaceShip4 = (G*((planetMass*spaceShipMass)/(rMag*rMag)))
gravForce4 = arrow(pos=spaceShip4.pos , axis = scaleFactor*r , color = color.yellow)

spaceShip5= sphere(radius = 3e6, pos = vector(13e7,4.5e7,0), color = color.magenta)
r = vector(spaceShip5.pos.x-planet.pos.x,spaceShip5.pos.y-planet.pos.y,0)
rMag = sqrt(r.x*r.x+r.y*r.y)
gravForceSpaceShip5 = (G*((planetMass*spaceShipMass)/(rMag*rMag)))
gravForce5 = arrow(pos=spaceShip5.pos , axis = scaleFactor*r , color = color.yellow)





